# Упражнение 35. Плата за такси. Представьте, что сумма за пользование услугами такси
# складывается из базового тарифа в размере $4,00 плюс $0,25 за каждые 140 м поездки.
# Напишите функцию, принимающую в качестве единственного параметра расстояние
# поездки в километрах и возвращающую итоговую сумму оплаты такси. В основной
# программе должен демонстрироваться результат вызова функции. Подсказка. Цены на
# такси могут меняться со временем. Используйте константы для представления базового
# тарифа и плавающей ставки, чтобы программу можно было легко обновлять при
# изменении цен.

# Упражнение 36. Расчет стоимости доставки (23 строки) Интернет-магазин предоставляет
# услугу экспресс-доставки для части своих товаров по цене $10,95 за первый товар в заказе
# и $2,95 – за все последующие. Напишите функцию, принимающую в качестве
# единственного параметра количество товаров в заказе и возвращающую общую сумму
# доставки. В основной программе должны производиться запрос количества позиций
# в заказе у пользователя и отображаться на экране сумма доставки

# 1. Напишите функцию Python, чтобы найти максимум трех чисел

# a = 0
# b = 0
# c = 0
#
#
# def max(a, b, c):
#     if a > b:
#         if a > c:
#             print('a')
#             return a
#
#     if b > a:
#         if b > c:
#             print('b')
#             return b
#
#     if c > a:
#         if c > b:
#             print('c')
#             return c
#
#
# a = 3
# b = 3
# c = 7
# print(max(a,b,c))

# 2. Напишите функцию Python для суммирования всех чисел в списке.
# my_sum = [85, 6, 7]
#
#
# def sum(my_sum):
#     total = 0
#     for i in my_sum:
#         total += i
#     return total
#
# print(sum(my_sum))

# 3. Напишите функцию Python для вычисления факториала числа (неотрицательное целое число).
# Функция принимает число в качестве аргумента.
# a = 5
#
#
# def fact(a):
#     if (a == 1 or a == 0):
#         return 1
#     else:
#         return a * fact(a - 1)
#
# print(fact(a))
# 4. Напишите функцию на Python для печати четных чисел из заданного списка.

# my_sum = [80, 6, 7, 18, 19, 4]


# def even(my_sum):
#     my_enum = []
#     for i in my_sum:
#         if i % 2 == 0:
#             my_enum.append(i)
#     return my_enum
#
#
# print(even(my_sum))

# Упражнение 41. Проверка пароля на надежность. В данном упражнении вам необходимо
# написать функцию, проверяющую введенный пароль на надежность. Определим как
# надежный пароль, состоящий минимум из восьми символов и включающий хотя бы по
# одной букве в верхнем и нижнем регистрах и как минимум одну цифру. Функция должна
# возвращать True, если переданный в качестве параметра пароль отвечает требованиям
# надежности. В противном случае возвращаемым значением должно быть False.
# В основной программе необходимо запросить у пользователя пароль и оповестить его
# о том, является ли он достаточно надежным.