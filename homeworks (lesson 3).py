# Упражнение 45. Порядок сортировки. Напишите программу, которая будет запрашивать
# у пользователя целочисленные значения и сохранять их в виде списка. Индикатором
# окончания ввода значений должен служить ноль. Затем программа должна вывести на
# экран все введенные пользователем числа (кроме нуля) в порядке возрастания – по
# одному значению в строке. Используйте для сортировки либо метод sort, либо функцию
# sorted
# my_list = []
# integ = None
# while (integ != 0):
#     integ = int(input('Введите число: '))
#     my_list.append(integ)
#     if integ == 0 :
#         break
# my_list.sort()
# my_list.remove(0)
# print(my_list)
# for integ in my_list:
#     print(integ)
# Упражнение 46. Обратный порядок. Напишите программу, которая, как и в предыдущем
# случае, будет запрашивать у пользователя целые числа и сохранять их в виде списка.
# Индикатором окончания ввода значений также должен служить ноль. На этот раз
# необходимо вывести на экран введенные значения в порядке убывания

# my_list = []
# integ = None
# while (integ != 0):
#     integ = int(input('Введите число: '))
#     my_list.append(integ)
#     if integ == 0 :
#         break
# my_list.sort(reverse=True)
# my_list.remove(0)
# print(my_list)

# Упражнение 47. Избавляемся от дубликатов. В данном упражнении вам предстоит
# разработать программу, в которой у пользователя будет запрошен список слов, пока он не
# оставит строку ввода пустой. После этого на экране должны быть показаны слова,
# введенные пользователем, но без повторов, – каждое по одному разу. При этом слова
# должны быть отображены в том же порядке, в каком их вводили с клавиатуры. Например,
# если пользователь на запрос программы введет следующий список слов: first second first
# third second программа должна вывести: first second third
# my_list = []
# while True:
#     stroc = input('Введите слово: ')
#     my_list.append(stroc)
#     if stroc == '':
#         break
# print('Список до удаления дубликатов:', my_list)
# index = 1
# while index < len(my_list):
#
#     if my_list[index] in my_list[: index]:
#         my_list.pop(index)
#     else:
#         index += 1
# my_list.remove('')
# print('Список после удаления дубликатов: ', my_list)
##### 2
# my_list = []
# while True:
#     value = input('Введите строку: ')
#     if not value:
#         break
#     if value not in my_list:
#         my_list.append(value)
# print(my_list)
# Упражнение 48. Отрицательные, положительные и нули. Напишите программу,
# запрашивающую у пользователя целые числа, пока он не оставит строку ввода пустой.
# После окончания ввода на экран должны быть выведены сначала все отрицательные
# числа, которые были введены, затем нулевые и только после этого положительные.
# Внутри каждой группы числа должны отображаться в той последовательности, в которой
# были введены пользователем. Например, если он ввел следующие числа: 3, -4, 1, 0, -1, 0
# и -2, вывод должен оказаться таким: -4, -1, -2, 0, 0, 3 и 1. Каждое значение должно
# отображаться на новой строке.

# my_list = []
#
# while True:
#     integ = input(('Введите целое число: ').split(','))
#     my_list.append(integ)
#
#     if integ == '':
#         break
# my_list.remove('')
# print('Список до сортировки: ', my_list)
# minus = []
# plus = []
# zero = []
# for integ in my_list:
#     if integ < '0':
#         minus.append(integ)
#     elif integ == '0':
#         zero.append(integ)
#     else:
#         plus.append(integ)
# result = []
# result.append(minus)
# result.append(zero)
# result.append(plus)
# print(result)
