# 1. Создайте словарь, в котором ключами будут числа от 1 до 10, а значениями эти же числа, возведенные в куб.
# 2. Даны два словаря: dictionary_1 = {'a': 300, 'b': 400} и dictionary_2 = {'c': 500, 'd': 600}.
# Объедините их в один при помощи встроенных функций языка Python.
# 3. Дан словарь с числовыми значениями. Необходимо их все перемножить и вывести на экран.
# {'data1': 375, 'data2': 567, 'data3': -37, 'data4': 21}
# 4. Даны два списка одинаковой длины. Необходимо создать из них словарь таким образом, чтобы элементы первого списка
# были ключами, а элементы второго — соответственно значениями нашего словаря.
# keys = ['red', 'green', 'blue']
# values = ['#FF0000','#008000', '#0000FF']
# 5. Создайте словарь из строки 'hello world' следующим образом: в качестве ключей возьмите буквы строки,
# а значениями пусть будут числа, соответствующие количеству вхождений данной буквы в строку.
# 6. Доработать игру quiz с вариантами выбора и выбором ИИ. (Выбирается случайный ответ)
# Упражнение 53. Азбука Морзе. Азбука Морзе зашифровывает буквы и цифры при помощи
# точек и тире. В данном упражнении вам необходимо написать программу, в которой
# соответствие символов из азбуки Морзе будет храниться в виде словаря. В табл. 6.3
# приведена та часть азбуки, которая вам понадобится при решении этого задания. В
# основной программе вам необходимо запросить у пользователя строку. После этого
# программа должна преобразовать его в соответствующую последовательность точек
# и тире, вставляя пробелы между отдельными символами. Символы, не представленные
# в таблице, можно игнорировать. Например, сообщение Hello, World! может быть
# представлено следующей последовательностью: .... . .–.. .–.. ––– .–– ––– .–. .–.. –..
# 7 доработать игру sqrabble
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.